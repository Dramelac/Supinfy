@model Supinfy.ViewModel.PlaylistVM
@{
    ViewBag.Title = "Detail";
}

<div class="row">
    <div class="col-md-12">
        <h2>Detail - @Html.DisplayFor(m => Model.Name)</h2>
        <p>Created by @Html.DisplayFor(m => Model.OwnerName), this playlist contains @Html.DisplayFor(m => Model.MusicCount) track@(Model.MusicCount > 0 ? "s" : "")</p>
        <i>@Html.Label(Model.CreationDate.ToShortDateString())</i><br />
    </div>
</div>

@if (Model.MusicCount == 0)
{
    <div>
        <h3>This paylist has no music yet.</h3>
    </div>
}

@foreach (var music in Model.MusicList)
{
    if (Model.IsOwner)
    {
        <hr/>
        <div class="row music" data-id="@music.TrackId" data-title="@music.Title" data-artist="@music.Artist" data-url="@music.TrackUrl" data-artwork="@music.ArtworkUrl">
            <div class="col-md-2 col-md-offset-1 col-xs-3">
                <img src="@music.ArtworkUrl" alt=""/>
            </div>
            <div class="col-md-6 col-xs-6 music_name">
                @Html.Raw(HttpUtility.HtmlDecode(music.Artist)) - @Html.Raw(HttpUtility.HtmlDecode(music.Title))
            </div>
            <div class="music-control col-md-3 col-xs-3">
                <a href="@Url.Action("RemoveMusic", "Playlist", new {playlistId = Model.Id, trackId = music.TrackId})" class="btn btn-danger">
                    <span class="glyphicon glyphicon-trash"></span> Remove
                </a>
            </div>
        </div>
    }
    else
    {
        Html.RenderPartial("~/Views/Music/MusicBlock.cshtml", music);
    }
}